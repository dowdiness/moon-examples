// Generated using `moon info`, DON'T EDIT IT
package "antisatori/moon-examples/lib"

// Values
fn hello() -> String

fn[T : Default] make() -> Queue[T]

// Errors

// Types and methods
pub(all) enum Instruct {
  Eps(Int)
  Branch(Int, Int)
  Character(Char, Int)
  Match
}
impl Show for Instruct

pub struct LinkedList[T] {
  mut head : Node[T]?
  mut tail : Node[T]?
}
fn[T] LinkedList::length(Self[T]) -> Int
fn[T] LinkedList::make() -> Self[T]
fn[T] LinkedList::push(Self[T], T) -> Self[T]
impl[T] Default for LinkedList[T]
impl[T : Eq] Eq for LinkedList[T]
impl[T : Show] Show for LinkedList[T]

type Node[T]
impl[T : Eq] Eq for Node[T]
impl[T : Show] Show for Node[T]

type Queue[T]

// Type aliases

// Traits
trait Default

