// Generated using `moon info`, DON'T EDIT IT
package "antisatori/cek_machine"

// Values
fn eval(Term, Env) -> Value?

fn example() -> Term

fn identity() -> Term

// Errors

// Types and methods
pub(all) struct Env {
  vars : Map[String, Value]
}
fn Env::add(Self, String, Value) -> Self
fn Env::contains(Self, String) -> Bool
fn Env::get(Self, String) -> Value?
fn Env::new() -> Self
fn Env::set(Self, String, Value) -> Unit
impl Eq for Env
impl Show for Env

pub enum Term {
  App(Term, Term)
  Lam(String, Term)
  Var(String)
}
impl Eq for Term
impl Show for Term

pub enum Value {
  Closure(Env, String, Term)
}
impl Eq for Value
impl Show for Value

// Type aliases

// Traits

